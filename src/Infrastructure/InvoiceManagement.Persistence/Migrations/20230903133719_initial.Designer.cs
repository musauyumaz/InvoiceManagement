// <auto-generated />
using System;
using InvoiceManagement.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceManagement.Persistence.Migrations
{
    [DbContext(typeof(InvoiceManagementDbContext))]
    [Migration("20230903133719_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorCount")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Blocks", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Home", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BlockId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoorNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FloorNumber")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LandlordId")
                        .HasColumnType("int");

                    b.Property<int?>("ResidentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("RoomCount")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UsageStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("LandlordId");

                    b.HasIndex("ResidentId")
                        .IsUnique();

                    b.ToTable("Homes", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("FinalReading")
                        .HasColumnType("real");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<float>("InitialReading")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float>("KDV")
                        .HasColumnType("real");

                    b.Property<DateTime>("PaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("UsageAmount")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.ElectricityBill", b =>
                {
                    b.HasBaseType("InvoiceManagement.Domain.Entities.Invoice");

                    b.Property<float>("ElectricityConsumptionTax")
                        .HasColumnType("real");

                    b.Property<float>("EnergyFund")
                        .HasColumnType("real");

                    b.Property<float>("Trt")
                        .HasColumnType("real");

                    b.ToTable("ElectricityBills", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.NaturalGasBill", b =>
                {
                    b.HasBaseType("InvoiceManagement.Domain.Entities.Invoice");

                    b.Property<float>("OtherTax")
                        .HasColumnType("real");

                    b.ToTable("NaturalGasBills", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.WaterBill", b =>
                {
                    b.HasBaseType("InvoiceManagement.Domain.Entities.Invoice");

                    b.Property<float>("EnvironmentalCleaningTax")
                        .HasColumnType("real");

                    b.Property<float>("WasteWaterTax")
                        .HasColumnType("real");

                    b.ToTable("WaterBills", (string)null);
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Home", b =>
                {
                    b.HasOne("InvoiceManagement.Domain.Entities.Block", "Block")
                        .WithMany("Homes")
                        .HasForeignKey("BlockId");

                    b.HasOne("InvoiceManagement.Domain.Entities.User", "LandLord")
                        .WithMany("LandlordHomes")
                        .HasForeignKey("LandlordId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("InvoiceManagement.Domain.Entities.User", "Resident")
                        .WithOne("ResidentHome")
                        .HasForeignKey("InvoiceManagement.Domain.Entities.Home", "ResidentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("LandLord");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("InvoiceManagement.Domain.Entities.Home", "Home")
                        .WithMany("Invoices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceManagement.Domain.Entities.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.ElectricityBill", b =>
                {
                    b.HasOne("InvoiceManagement.Domain.Entities.Invoice", null)
                        .WithOne()
                        .HasForeignKey("InvoiceManagement.Domain.Entities.ElectricityBill", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.NaturalGasBill", b =>
                {
                    b.HasOne("InvoiceManagement.Domain.Entities.Invoice", null)
                        .WithOne()
                        .HasForeignKey("InvoiceManagement.Domain.Entities.NaturalGasBill", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.WaterBill", b =>
                {
                    b.HasOne("InvoiceManagement.Domain.Entities.Invoice", null)
                        .WithOne()
                        .HasForeignKey("InvoiceManagement.Domain.Entities.WaterBill", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Block", b =>
                {
                    b.Navigation("Homes");
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.Home", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("InvoiceManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("LandlordHomes");

                    b.Navigation("ResidentHome")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
